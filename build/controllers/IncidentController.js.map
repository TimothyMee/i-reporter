{"version":3,"sources":["../../server/controllers/IncidentController.js"],"names":["IncidentController","getAllRedFlag","req","res","incidentModel","getAll","then","result","status","json","data","catch","err","error","getByIdRedFlag","get","parseInt","params","id","createNewRedFlag","newIntervention","body","createNew","editLocationRedFlag","editLocation","editCommentRedFlag","editComment","deleteIncidentRedFlag","deleteIncident","getAllIntervention","getByIdIntervention","createNewIntervention","editLocationIntervention","editCommentIntervention","deleteIncidentIntervention"],"mappings":"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","sourcesContent":["import incidentModel from '../models/incident-model';\n\nconst IncidentController = {\n  getAllRedFlag(req, res) {\n    incidentModel.getAll('red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  getByIdRedFlag(req, res) {\n    incidentModel.get(parseInt(req.params.id), 'red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  createNewRedFlag(req, res) {\n    const newIntervention = req.body;\n    incidentModel.createNew(newIntervention, 'red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  editLocationRedFlag(req, res) {\n    incidentModel.editLocation(parseInt(req.params.id), req.body, 'red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  editCommentRedFlag(req, res) {\n    incidentModel.editComment(parseInt(req.params.id), req.body, 'red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  deleteIncidentRedFlag(req, res) {\n    incidentModel.deleteIncident(parseInt(req.params.id), 'red-flag')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n\n  getAllIntervention(req, res) {\n    incidentModel.getAll('intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  getByIdIntervention(req, res) {\n    incidentModel.get(parseInt(req.params.id), 'intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  createNewIntervention(req, res) {\n    const newIntervention = req.body;\n    incidentModel.createNew(newIntervention, 'intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  editLocationIntervention(req, res) {\n    incidentModel.editLocation(parseInt(req.params.id), req.body, 'intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  editCommentIntervention(req, res) {\n    incidentModel.editComment(parseInt(req.params.id), req.body, 'intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n\n  deleteIncidentIntervention(req, res) {\n    incidentModel.deleteIncident(parseInt(req.params.id), 'intervention')\n      .then((result) => {\n        res.status(result.status).json(result.data);\n      })\n      .catch((err) => {\n        res.status(err.status).json({ error: err.error });\n      });\n  },\n};\nexport default IncidentController;\n"],"file":"IncidentController.js"}